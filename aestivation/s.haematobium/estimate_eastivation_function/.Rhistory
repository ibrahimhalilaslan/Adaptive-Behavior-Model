ymin = -40, ymax =-25   # Adjust these values for positioning
) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_vary_temp),
xmin = -3, xmax = 17,  # Adjust these values for positioning
ymin = -40, ymax = -25  # Adjust these values for positioning
)
# Plot the map with intensity of color based on value
pdf(file = "s_heamatobium_africa_prevalence_difference.pdf", width = 8, height = 8)
print(main_plot)
dev.off()
# Read the CSV file
my_data <- read.csv("my_vector.csv")
daily_temps <- as.numeric(my_data)
# Create the inset plot
inset_plot_vary_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = daily_temps)) +
geom_line(color = "blue") +
theme_classic() +
labs(title = "", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) # Remove margins for tight placement
# Create the inset plot
inset_plot_cons_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = mean(daily_temps))) +
geom_line(color = "blue") +
theme_classic() +
labs(title = " ", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) +
scale_y_continuous(labels = scales::number_format(accuracy = 1))# Remove margins for tight placement
# Create the main plot and store it in an object
main_plot <- ggplot() +
geom_sf(data = africa_poly, fill = "#AED6F1", color = "#AED6F1", linewidth = 10) +
geom_sf(data = africa_poly, fill = "grey40") +
geom_stars(aes(fill = prevalence), data = rast, alpha = 1) +
scale_fill_gradient2(low = "purple", mid = "white", high = "red", midpoint = 0, na.value = NA,
breaks = c(-0.4, 0, 0.4)) +
geom_map(data = africa_map, map = africa_map,
aes(map_id = region),
fill = NA, color = "black", size = 0.5) +
labs(title = expression(paste(italic(S.), " ", italic(haematobium))),
fill = "Prevalence Diff.") +  # Add title and color legend title
theme_void() +
coord_sf(ylim = c(-35, max(africa_map$lat))) +
guides(fill = guide_colorbar(barwidth = unit(10, "lines"), title.position = "top",
title.hjust = 0.5, ticks.colour = "black", frame.colour = "black")) +
theme(  # Adjust plot margins
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
plot.background = element_rect(fill = "white", color = NA),
legend.position = c(0.225, 0.4),
legend.direction = "horizontal",
legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_cons_temp),
xmin = -20, xmax = -10,  # Adjust these values for positioning
ymin = -40, ymax =-30   # Adjust these values for positioning
) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_vary_temp),
xmin = -5, xmax = 15,  # Adjust these values for positioning
ymin = -40, ymax = -30  # Adjust these values for positioning
)
# Plot the map with intensity of color based on value
pdf(file = "s_heamatobium_africa_prevalence_difference.pdf", width = 8, height = 8)
print(main_plot)
dev.off()
## This code is to plot generate the data frame for constant temperature
#clear environment
rm(list = ls())
# Load required libraries
library(maps)
library(ggplot2)
library(sf)
library(tidyr)
library(stars)
library(sfheaders)
library(scales)
load(file ="august_1.RData")
prevalence_africa <- read.csv(file = 'Sh_simulation_africa_time_series_mpb.csv')
prevalence_africa$constant_temp_simulation <- numeric(length(prevalence_africa$MAT))
for (i in 1:length(temperature)){
index_mat <- which(prevalence_africa$MAT <= temperature[i] + 0.1 & prevalence_africa$MAT > temperature[i])
prevalence_africa$constant_temp_simulation[index_mat] <- out_come_season[1,i]
}
# Get world map data
world_map <- map_data("world")
# Filter data for Africa
africa_map <- subset(world_map, region %in% c("Algeria", "Angola", "Benin", "Botswana", "Burkina Faso", "Western Sahara",
"Burundi", "Cameroon", "Cape Verde", "Central African Republic",
"Chad", "Comoros", "Democratic Republic of the Congo", "Republic of Congo",
"Djibouti", "Egypt", "Equatorial Guinea", "Eritrea", "Eswatini",
"Ethiopia", "Gabon", "Gambia", "Ghana", "Guinea", "Guinea-Bissau",
"Ivory Coast", "Kenya", "Lesotho", "Liberia", "Libya", "Madagascar",
"Malawi", "Mali", "Mauritania", "Mauritius", "Morocco", "Mozambique",
"Namibia", "Niger", "Nigeria", "Rwanda", "Sao Tome and Principe",
"Senegal", "Seychelles", "Sierra Leone", "Somalia", "South Africa",
"South Sudan", "Sudan", "Tanzania", "Togo", "Tunisia", "Uganda",
"Zambia", "Zimbabwe"))
africa_poly <- st_union(sfheaders::sf_polygon(africa_map, x = "long", y = "lat", polygon_id = "group"))
africa_poly <- st_set_crs(africa_poly, 4326)
# upload prevalence data
df_africa_mask <- read.csv(file = 'africa_mask_v1.csv')
df_africa_mask <- replace_na(complete(df_africa_mask, lon, lat), list(grid_code = 0))
df_africa_constant <- data.frame(Longitude = prevalence_africa$longitude, Latitude = prevalence_africa$latitude,
constant_temp_simulation = prevalence_africa$constant_temp_simulation)
df_africa_seasonal <- data.frame(Longitude = prevalence_africa$longitude, Latitude = prevalence_africa$latitude,
seasonal_temperature_simulation = prevalence_africa$Prevalence)
rast_constant <- st_set_crs(st_as_stars(df_africa_constant, coords = c("Longitude", "Latitude")), 4326)
mask_rast <- st_set_crs(st_as_stars(df_africa_mask, coords = c("lat", "lon")), 4326)
mask_rast <- st_warp(mask_rast, rast_constant)
rast_constant$constant_temp_simulation[mask_rast$grid_code == 1] <- NA
rast_constant <- rast_constant[africa_poly]
rast_seasonal <- st_set_crs(st_as_stars(df_africa_seasonal, coords = c("Longitude", "Latitude")), 4326)
mask_rast <- st_set_crs(st_as_stars(df_africa_mask, coords = c("lat", "lon")), 4326)
mask_rast <- st_warp(mask_rast, rast_seasonal)
rast_seasonal$seasonal_temperature_simulation[mask_rast$grid_code == 1] <- NA
rast_seasonal <- rast_seasonal[africa_poly]
rast <- rast_seasonal
rast$prevalence <- rast_constant$constant_temp_simulation-rast_seasonal$seasonal_temperature_simulation
# Load the R environment from the .RData file
# Read the CSV file
my_data <- read.csv("my_vector.csv")
daily_temps <- as.numeric(my_data)
# Create the inset plot
inset_plot_vary_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = daily_temps)) +
geom_line(color = "blue") +
theme_classic() +
labs(title = "", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) # Remove margins for tight placement
# Create the inset plot
inset_plot_cons_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = mean(daily_temps))) +
geom_line(color = "blue") +
theme_classic() +
labs(title = " ", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) +
scale_y_continuous(labels = scales::number_format(accuracy = 1))# Remove margins for tight placement
# Create the main plot and store it in an object
main_plot <- ggplot() +
geom_sf(data = africa_poly, fill = "#AED6F1", color = "#AED6F1", linewidth = 10) +
geom_sf(data = africa_poly, fill = "grey40") +
geom_stars(aes(fill = prevalence), data = rast, alpha = 1) +
scale_fill_gradient2(low = "purple", mid = "white", high = "red", midpoint = 0, na.value = NA,
breaks = c(-0.4, 0, 0.4)) +
geom_map(data = africa_map, map = africa_map,
aes(map_id = region),
fill = NA, color = "black", size = 0.5) +
labs(title = expression(paste(italic(S.), " ", italic(haematobium))),
fill = "Prevalence Diff.") +  # Add title and color legend title
theme_void() +
coord_sf(ylim = c(-35, max(africa_map$lat))) +
guides(fill = guide_colorbar(barwidth = unit(10, "lines"), title.position = "top",
title.hjust = 0.5, ticks.colour = "black", frame.colour = "black")) +
theme(  # Adjust plot margins
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
plot.background = element_rect(fill = "white", color = NA),
legend.position = c(0.225, 0.4),
legend.direction = "horizontal",
legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_cons_temp),
xmin = -25, xmax = -7.5,  # Adjust these values for positioning
ymin = -40, ymax =-25   # Adjust these values for positioning
) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_vary_temp),
xmin = -5, xmax = 17.5,  # Adjust these values for positioning
ymin = -40, ymax = -25  # Adjust these values for positioning
)
# Plot the map with intensity of color based on value
pdf(file = "s_heamatobium_africa_prevalence_difference.pdf", width = 8, height = 8)
print(main_plot)
dev.off()
# Create the inset plot
inset_plot_vary_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = daily_temps)) +
geom_line(color = "blue") +
theme_classic() +
labs(title = "", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) # Remove margins for tight placement
# Create the inset plot
inset_plot_cons_temp <- ggplot(data.frame(1:length(daily_temps), daily_temps), aes(x = 1:length(daily_temps), y = mean(daily_temps))) +
geom_line(color = "blue") +
theme_classic() +
labs(title = " ", x = "Days", y = "Temp.") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title = element_text(size = 15),
axis.text = element_text(size = 10),
plot.margin = margin(0, 0, 0, 0)) +
scale_y_continuous(labels = scales::number_format(accuracy = 1))# Remove margins for tight placement
# Create the main plot and store it in an object
main_plot <- ggplot() +
geom_sf(data = africa_poly, fill = "#AED6F1", color = "#AED6F1", linewidth = 10) +
geom_sf(data = africa_poly, fill = "grey40") +
geom_stars(aes(fill = prevalence), data = rast, alpha = 1) +
scale_fill_gradient2(low = "purple", mid = "white", high = "red", midpoint = 0, na.value = NA,
breaks = c(-0.4, 0, 0.4)) +
geom_map(data = africa_map, map = africa_map,
aes(map_id = region),
fill = NA, color = "black", size = 0.5) +
labs(title = expression(paste(italic(S.), " ", italic(haematobium))),
fill = "Prevalence Diff.") +  # Add title and color legend title
theme_void() +
coord_sf(ylim = c(-35, max(africa_map$lat))) +
guides(fill = guide_colorbar(barwidth = unit(10, "lines"), title.position = "top",
title.hjust = 0.5, ticks.colour = "black", frame.colour = "black")) +
theme(  # Adjust plot margins
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
plot.background = element_rect(fill = "white", color = NA),
legend.position = c(0.225, 0.4),
legend.direction = "horizontal",
legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_cons_temp),
xmin = -30, xmax = -12.5,  # Adjust these values for positioning
ymin = -40, ymax =-25   # Adjust these values for positioning
) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_vary_temp),
xmin = -10, xmax = 22.5,  # Adjust these values for positioning
ymin = -40, ymax = -25  # Adjust these values for positioning
)
# Plot the map with intensity of color based on value
pdf(file = "s_heamatobium_africa_prevalence_difference.pdf", width = 8, height = 8)
print(main_plot)
dev.off()
# Create the main plot and store it in an object
main_plot <- ggplot() +
geom_sf(data = africa_poly, fill = "#AED6F1", color = "#AED6F1", linewidth = 10) +
geom_sf(data = africa_poly, fill = "grey40") +
geom_stars(aes(fill = prevalence), data = rast, alpha = 1) +
scale_fill_gradient2(low = "purple", mid = "white", high = "red", midpoint = 0, na.value = NA,
breaks = c(-0.4, 0, 0.4)) +
geom_map(data = africa_map, map = africa_map,
aes(map_id = region),
fill = NA, color = "black", size = 0.5) +
labs(title = expression(paste(italic(S.), " ", italic(haematobium))),
fill = "Prevalence Diff.") +  # Add title and color legend title
theme_void() +
coord_sf(ylim = c(-35, max(africa_map$lat))) +
guides(fill = guide_colorbar(barwidth = unit(10, "lines"), title.position = "top",
title.hjust = 0.5, ticks.colour = "black", frame.colour = "black")) +
theme(  # Adjust plot margins
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
plot.background = element_rect(fill = "white", color = NA),
legend.position = c(0.225, 0.4),
legend.direction = "horizontal",
legend.text = element_text(size = 15),
legend.title = element_text(size = 15)) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_cons_temp),
xmin = -27.5, xmax = -10,  # Adjust these values for positioning
ymin = -40, ymax =-25   # Adjust these values for positioning
) + #+  # Center plot title
annotation_custom(
grob = ggplotGrob(inset_plot_vary_temp),
xmin = -7.5, xmax = 10,  # Adjust these values for positioning
ymin = -40, ymax = -25  # Adjust these values for positioning
)
# Plot the map with intensity of color based on value
pdf(file = "s_heamatobium_africa_prevalence_difference.pdf", width = 8, height = 8)
print(main_plot)
dev.off()
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_nov_21st_ver_R/aestivation/s.haematobium/estimate_eastivation_function")
#clear environment
rm(list = ls())
load("my_environment_10.RData")
square_error_1 <- square_error
load("my_environment_20.RData")
square_error_2 <- square_error
load("my_environment_30.RData")
square_error_3 <- square_error
load("my_environment_40.RData")
square_error_4 <- square_error
load("my_environment_50.RData")
square_error_5 <- square_error
load("my_environment_60.RData")
square_error_6 <- square_error
load("my_environment_70.RData")
square_error_7 <- square_error
load("my_environment_80.RData")
square_error_8 <- square_error
load("my_environment_90.RData")
square_error_9 <- square_error
load("my_environment_100.RData")
square_error_10 <- square_error
load("my_environment_116.RData")
square_error_11 <- square_error
load("my_environment_132.RData")
square_error_12 <- square_error
error <- c(square_error_1, square_error_2, square_error_3, square_error_4, square_error_5,
square_error_6, square_error_7, square_error_8, square_error_9, square_error_10,
square_error_11, square_error_12)
# We start with setting our eastivation function
# set the temperature of half saturation for snails estivation function at high temperatures
aest_temp_seq <- seq(from = 22, to = 27, by = .5)
# set the rate of snails move to the estivation stages
aest_rate_seq <- seq(from = 0.01, to = 0.12, by = 0.05)
# Set the steepness of estivation function for hot temperature
steepness_seq <-  seq(from = 0.1, to = 1.6, by = 0.5)
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
index_temp <- which(combinations$Var1 == 22.0 & 22.5)
combinations[-index_temp,]
index_temp <- which(combinations$Var1 == 22.0 | 22.5)
combinations[-index_temp,]
index_temp
combinations[-index_temp,]
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
which(combinations$Var1 == 22.0 | 22.5)
index_temp <- which(combinations$Var1 == 22.0 | 22.5)
combinations[-index_temp,]
combinations[-c(index_temp),]
index_temp
combinations
combinations[1:3]
combinations[1:3,]
combinations[-1:3,]
combinations[-c(1:3),]
combinations[-as.numeric(index_temp),]
as.numeric(index_temp)
as.numeric(c(index_temp))
as.numeric(c(index_temp))
combinations[-as.numeric(c(index_temp)),]
index_temp
class(index_temp)
combinations
new_data_frame <-  data.frame(combinations,error)
new_data_frame
new_data_frame[index_temp]
new_data_frame[index_temp,]
index_temp
index_temp <- which(combinations$Var1 == 22 | 22.5)
index_temp
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 = 22.5)
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 == 22.5)
index_temp
new_data_frame[index_temp,]
new_data_frame[-index_temp,]
new_data_frame <- new_data_frame[-index_temp,]
new_data_frame
which.min(new_data_frame$error)
new_data_frame[which.min(new_data_frame$error),]
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_nov_21st_ver_R/aestivation/s.mansoni/estimate_eastivation_function")
#clear environment
rm(list = ls())
load("my_environment_10.RData")
square_error_1 <- square_error
load("my_environment_20.RData")
square_error_2 <- square_error
load("my_environment_30.RData")
square_error_3 <- square_error
load("my_environment_40.RData")
square_error_4 <- square_error
load("my_environment_50.RData")
square_error_5 <- square_error
load("my_environment_60.RData")
square_error_6 <- square_error
load("my_environment_70.RData")
square_error_7 <- square_error
load("my_environment_80.RData")
square_error_8 <- square_error
load("my_environment_90.RData")
square_error_9 <- square_error
load("my_environment_100.RData")
square_error_10 <- square_error
load("my_environment_110.RData")
square_error_11 <- square_error
load("my_environment_120.RData")
square_error_12 <- square_error
load("my_environment_125.RData")
square_error_13 <- square_error
load("my_environment_132.RData")
square_error_14 <- square_error
error <- c(square_error_1, square_error_2, square_error_3, square_error_4, square_error_5,
square_error_6, square_error_7, square_error_8, square_error_9, square_error_10,
square_error_11, square_error_12, square_error_13, square_error_14)
# We start with setting our eastivation function
# set the temperature of half saturation for snails estivation function at high temperatures
aest_temp_seq <- seq(from = 22, to = 27, by = .5)
# set the rate of snails move to the estivation stages
aest_rate_seq <- seq(from = 0.01, to = 0.12, by = 0.05)
# Set the steepness of estivation function for hot temperature
steepness_seq <-  seq(from = 0.1, to = 1.6, by = 0.5)
# Generate all combinations
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
new_data_frame <-  data.frame(combinations,error)
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 == 22.5)
new_data_frame <- new_data_frame[-index_temp,]
new_data_frame[which.min(new_data_frame$error),]
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_nov_21st_ver_R/aestivation/s.mansoni/estimate_eastivation_function")
#clear environment
rm(list = ls())
load("my_environment_10.RData")
square_error_1 <- square_error
load("my_environment_20.RData")
square_error_2 <- square_error
load("my_environment_30.RData")
square_error_3 <- square_error
load("my_environment_40.RData")
square_error_4 <- square_error
load("my_environment_50.RData")
square_error_5 <- square_error
load("my_environment_60.RData")
square_error_6 <- square_error
load("my_environment_70.RData")
square_error_7 <- square_error
load("my_environment_80.RData")
square_error_8 <- square_error
load("my_environment_90.RData")
square_error_9 <- square_error
load("my_environment_100.RData")
square_error_10 <- square_error
load("my_environment_110.RData")
square_error_11 <- square_error
load("my_environment_120.RData")
square_error_12 <- square_error
load("my_environment_125.RData")
square_error_13 <- square_error
load("my_environment_132.RData")
square_error_14 <- square_error
error <- c(square_error_1, square_error_2, square_error_3, square_error_4, square_error_5,
square_error_6, square_error_7, square_error_8, square_error_9, square_error_10,
square_error_11, square_error_12, square_error_13, square_error_14)
# We start with setting our eastivation function
# set the temperature of half saturation for snails estivation function at high temperatures
aest_temp_seq <- seq(from = 22, to = 27, by = .5)
# set the rate of snails move to the estivation stages
aest_rate_seq <- seq(from = 0.01, to = 0.12, by = 0.05)
# Set the steepness of estivation function for hot temperature
steepness_seq <-  seq(from = 0.1, to = 1.6, by = 0.5)
# Generate all combinations
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
new_data_frame <-  data.frame(combinations,error)
new_data_frame
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 == 22.5)
new_data_frame[which.min(new_data_frame$error),]
new_data_frame <- new_data_frame[-index_temp,]
new_data_frame
new_data_frame[which.min(new_data_frame$error),]
# Generate all combinations
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
new_data_frame <-  data.frame(combinations,error)
new_data_frame[which.min(new_data_frame$error),]
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 == 22.5)
new_data_frame <- new_data_frame[-index_temp,]
new_data_frame[which.min(new_data_frame$error),]
new_data_frame
new_data_frame[which.min(new_data_frame$error),]
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_nov_21st_ver_R/aestivation/s.haematobium/estimate_eastivation_function")
#clear environment
rm(list = ls())
load("my_environment_10.RData")
square_error_1 <- square_error
load("my_environment_20.RData")
square_error_2 <- square_error
load("my_environment_30.RData")
square_error_3 <- square_error
load("my_environment_40.RData")
square_error_4 <- square_error
load("my_environment_50.RData")
square_error_5 <- square_error
load("my_environment_60.RData")
square_error_6 <- square_error
load("my_environment_70.RData")
square_error_7 <- square_error
load("my_environment_80.RData")
square_error_8 <- square_error
load("my_environment_90.RData")
square_error_9 <- square_error
load("my_environment_100.RData")
square_error_10 <- square_error
load("my_environment_116.RData")
square_error_11 <- square_error
load("my_environment_132.RData")
square_error_12 <- square_error
error <- c(square_error_1, square_error_2, square_error_3, square_error_4, square_error_5,
square_error_6, square_error_7, square_error_8, square_error_9, square_error_10,
square_error_11, square_error_12)
# We start with setting our eastivation function
# set the temperature of half saturation for snails estivation function at high temperatures
aest_temp_seq <- seq(from = 22, to = 27, by = .5)
# set the rate of snails move to the estivation stages
aest_rate_seq <- seq(from = 0.01, to = 0.12, by = 0.05)
# Set the steepness of estivation function for hot temperature
steepness_seq <-  seq(from = 0.1, to = 1.6, by = 0.5)
# Generate all combinations
combinations <- expand.grid(aest_temp_seq, aest_rate_seq, steepness_seq)
new_data_frame <-  data.frame(combinations,error)
new_data_frame[which.min(new_data_frame$error),]
index_temp <- which(combinations$Var1 == 22 | combinations$Var1 == 22.5)
new_data_frame <- new_data_frame[-index_temp,]
new_data_frame
new_data_frame[which.min(new_data_frame$error),]
