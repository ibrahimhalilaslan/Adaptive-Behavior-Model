# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.haematobium data set from gntd data set
sch_haematobium_ind <- which(prev_percent$parasite_s == "S. haematobium")
sch_haematobium <- prev_percent[sch_haematobium_ind, ]
sch_haematobium <- sch_haematobium[-which(sch_haematobium$percent_pos == 0),]
sch_haematobium <- sch_haematobium[-c(which(is.na(sch_haematobium$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_haematobium$bio01,
y = (sch_haematobium$bio10-sch_haematobium$bio11)*pi/(sch_haematobium$bio01*4*sqrt(2)),
intensity = sch_haematobium$percent_pos
)
# upload whole africa bioclimate variables
##africa_temperature <- read.csv(file = 'Africa_BIOCLIM.csv')
# Convert bioclimate variables into seasonality
#df_africa_temperature <- data.frame(
##  x = africa_temperature$BIO1,
# y = (africa_temperature$BIO10-africa_temperature$BIO11)*pi/(africa_temperature$BIO1*4*sqrt(2))
#)
# Remove the temperature values out of our interest
#df_africa_temperature_filtered <- df_africa_temperature[!(df_africa_temperature$x > 35 | df_africa_temperature$x <  12), ]
#df_africa_temperature_filtered <- df_africa_temperature_filtered[!(df_africa_temperature_filtered$y > 0.32 | df_africa_temperature_filtered$y < 0), ]
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/aestivation/s.haematobium/heat_map/aestivation_heat_map.RData")
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 1] <- 0
# When using estimated clumper parameter for S. heamatobium
wormPrevalenceSh <- function(M) {
k <- exp(0.5186358*log(M) - 3.253653)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSh(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.haematobium data set from gntd data set
sch_haematobium_ind <- which(prev_percent$parasite_s == "S. haematobium")
sch_haematobium <- prev_percent[sch_haematobium_ind, ]
sch_haematobium <- sch_haematobium[-which(sch_haematobium$percent_pos == 0),]
sch_haematobium <- sch_haematobium[-c(which(is.na(sch_haematobium$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_haematobium$bio01,
y = (sch_haematobium$bio10-sch_haematobium$bio11)*pi/(sch_haematobium$bio01*4*sqrt(2)),
intensity = sch_haematobium$percent_pos
)
# upload whole africa bioclimate variables
##africa_temperature <- read.csv(file = 'Africa_BIOCLIM.csv')
# Convert bioclimate variables into seasonality
#df_africa_temperature <- data.frame(
##  x = africa_temperature$BIO1,
# y = (africa_temperature$BIO10-africa_temperature$BIO11)*pi/(africa_temperature$BIO1*4*sqrt(2))
#)
# Remove the temperature values out of our interest
#df_africa_temperature_filtered <- df_africa_temperature[!(df_africa_temperature$x > 35 | df_africa_temperature$x <  12), ]
#df_africa_temperature_filtered <- df_africa_temperature_filtered[!(df_africa_temperature_filtered$y > 0.32 | df_africa_temperature_filtered$y < 0), ]
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.haematobium/heat_map/july_23.RData")
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.haematobium/heat_map/july_23.RData")
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 1] <- 0
# When using estimated clumper parameter for S. heamatobium
wormPrevalenceSh <- function(M) {
k <- exp(0.5186358*log(M) - 3.253653)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSh(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.haematobium data set from gntd data set
sch_haematobium_ind <- which(prev_percent$parasite_s == "S. haematobium")
sch_haematobium <- prev_percent[sch_haematobium_ind, ]
sch_haematobium <- sch_haematobium[-which(sch_haematobium$percent_pos == 0),]
sch_haematobium <- sch_haematobium[-c(which(is.na(sch_haematobium$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_haematobium$bio01,
y = (sch_haematobium$bio10-sch_haematobium$bio11)*pi/(sch_haematobium$bio01*4*sqrt(2)),
intensity = sch_haematobium$percent_pos
)
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = "", #expression(paste("Mean annual temperature (", degree, "C)")),
y = expression(paste("Seasonality  ", (epsilon))),
title = expression(italic("S. haematobium"))) +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.mansoni/heat_map/july_22.RData")
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.mansoni/heat_map")
## This script plot heatmap with africa temperature and gntd data set
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 2.5 | is.na(out_come_season)] <- 0
wormPrevalenceSm <- function(M) {
k <- exp(0.61521*log(M) - 4.844146)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSm(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.mansoni data set from gntd data set
sch_mansoni_ind <- which(prev_percent$parasite_s == "S. mansoni")
sch_mansoni <- prev_percent[sch_mansoni_ind, ]
sch_mansoni <- sch_mansoni[-which(sch_mansoni$percent_pos == 0),]
sch_mansoni <- sch_mansoni[-c(which(is.na(sch_mansoni$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_mansoni$bio01,
y = (sch_mansoni$bio10-sch_mansoni$bio11)*pi/(sch_mansoni$bio01*4*sqrt(2)),
intensity = sch_mansoni$percent_pos
)
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_mansoni_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = "",#,
y = expression(paste("Seasonality  ", (epsilon))),
title = expression(italic("S. mansoni"))) +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))#+
#geom_text(x = 30, y = .331, label = " Simulation\n GNTD data",
#      size = 4, hjust = 0, vjust = 2, colour = "black") +
# geom_text(x = 29, y = .39, label = ".",
#         size = 20, hjust = 0, vjust = 2, colour = "red") +
#geom_text(x = 29, y = .37, label = ".",
#         size = 20, hjust = 0, vjust = 2, colour = "black")
dev.off()
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/aestivation/s.mansoni/heat_map")
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/aestivation/s.mansoni/heat_map/july_22.RData")
## This script plot heatmap with africa temperature and gntd data set
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 2.5] <- 0
wormPrevalenceSm <- function(M) {
k <- exp(0.61521*log(M) - 4.844146)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSm(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.mansoni data set from gntd data set
sch_mansoni_ind <- which(prev_percent$parasite_s == "S. mansoni")
sch_mansoni <- prev_percent[sch_mansoni_ind, ]
sch_mansoni <- sch_mansoni[-which(sch_mansoni$percent_pos == 0),]
sch_mansoni <- sch_mansoni[-c(which(is.na(sch_mansoni$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_mansoni$bio01,
y = (sch_mansoni$bio10-sch_mansoni$bio11)*pi/(sch_mansoni$bio01*4*sqrt(2)),
intensity = sch_mansoni$percent_pos
)
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_mansoni_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/aestivation/s.haematobium/heat_map")
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/aestivation/s.haematobium/heat_map/july_26.RData")
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
## This script plot heatmap with africa temperature and gntd data set
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 1] <- 0
# When using estimated clumper parameter for S. heamatobium
wormPrevalenceSh <- function(M) {
k <- exp(0.5186358*log(M) - 3.253653)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSh(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.haematobium data set from gntd data set
sch_haematobium_ind <- which(prev_percent$parasite_s == "S. haematobium")
sch_haematobium <- prev_percent[sch_haematobium_ind, ]
sch_haematobium <- sch_haematobium[-which(sch_haematobium$percent_pos == 0),]
sch_haematobium <- sch_haematobium[-c(which(is.na(sch_haematobium$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_haematobium$bio01,
y = (sch_haematobium$bio10-sch_haematobium$bio11)*pi/(sch_haematobium$bio01*4*sqrt(2)),
intensity = sch_haematobium$percent_pos
)
# upload whole africa bioclimate variables
##africa_temperature <- read.csv(file = 'Africa_BIOCLIM.csv')
# Convert bioclimate variables into seasonality
#df_africa_temperature <- data.frame(
##  x = africa_temperature$BIO1,
# y = (africa_temperature$BIO10-africa_temperature$BIO11)*pi/(africa_temperature$BIO1*4*sqrt(2))
#)
# Remove the temperature values out of our interest
#df_africa_temperature_filtered <- df_africa_temperature[!(df_africa_temperature$x > 35 | df_africa_temperature$x <  12), ]
#df_africa_temperature_filtered <- df_africa_temperature_filtered[!(df_africa_temperature_filtered$y > 0.32 | df_africa_temperature_filtered$y < 0), ]
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 3) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = .5) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = "") +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
#S. haematobium
load("/Users/ibrahimaslan/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.haematobium/heat_map/july_23.RData")
setwd("~/Library/CloudStorage/GoogleDrive-iaslan@stanford.edu/.shortcut-targets-by-id/1e2xUwinp8NuntTAkfNCUIW_48Onf6MCd/Belmont Project/Thermal_sensitive_models/r_ibrahim_scripts/aestivation_model/2024_july_20th_ver_R/no_aestivation/s.haematobium/heat_map")
## This script plot heatmap with africa temperature and gntd data set
# Replace entries in out_come_season with 0 if they are greater than 100 or less than 2
out_come_season[out_come_season < 1] <- 0
# When using estimated clumper parameter for S. heamatobium
wormPrevalenceSh <- function(M) {
k <- exp(0.5186358*log(M) - 3.253653)
p  <- 1 - (1+M/k)^(-k)    # fraction of humans with at least 1 parasites
return(p)
}
#convert mean parasite burden to prevalence
for (i in 1:length(out_come_season[,1])){
for (j in 1:length(out_come_season[1,])){
out_come_season[i,j] <- wormPrevalenceSh(out_come_season[i,j])
}
}
# save the prevalence as data frame for plot
df <- data.frame(x = as.vector(temp_matrix), y = as.vector(epsilon_matrix), Prevalence = as.vector(out_come_season))
# upload gntd data
prev_percent <- read.csv(file = 'gntd_vars_all.csv')
# Extract S.haematobium data set from gntd data set
sch_haematobium_ind <- which(prev_percent$parasite_s == "S. haematobium")
sch_haematobium <- prev_percent[sch_haematobium_ind, ]
sch_haematobium <- sch_haematobium[-which(sch_haematobium$percent_pos == 0),]
sch_haematobium <- sch_haematobium[-c(which(is.na(sch_haematobium$bio01))),]
# Convert Bioclimate variables into seasonality
gntd_data <- data.frame(
x = sch_haematobium$bio01,
y = (sch_haematobium$bio10-sch_haematobium$bio11)*pi/(sch_haematobium$bio01*4*sqrt(2)),
intensity = sch_haematobium$percent_pos
)
library(ggplot2)
library(dplyr)
# Your data frame (df) and gntd_data should be defined here
# Create a new variable for coloring
df <- df %>%
mutate(Prev. = ifelse(Prevalence == 0, NA, Prevalence))
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = "", #expression(paste("Mean annual temperature (", degree, "C)")),
y = expression(paste("Seasonality  ", (epsilon))),
title = expression(italic("S. haematobium"))) +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
# Print the plot
pdf(file = "bio21_heat_map_haematobium_distribution_seasonality.pdf", width = 8, height = 5)
par(mar = c(6, 6, 6, 1), xpd = TRUE)
ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = Prev.), size = 1, shape = 15, alpha = 1) +  # Adjusted alpha for transparency
geom_point(data = gntd_data, aes(x = x, y = y), size = 0.1, alpha = 5, col = "black") +
scale_colour_gradient2(low = "white", mid = "yellow", high = "red", midpoint = 0, na.value = "#D3D3D3") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(x = "", #expression(paste("Mean annual temperature (", degree, "C)")),
y = "", #expression(paste("Seasonality  ", (epsilon))),
title = expression(italic("S. haematobium"))) +
theme(axis.text = element_text(size = 20, color = "black"),
axis.title = element_text(size = 20, color = "black"),
plot.title = element_text(size = 20, face = "italic", hjust = 0.5))
dev.off()
